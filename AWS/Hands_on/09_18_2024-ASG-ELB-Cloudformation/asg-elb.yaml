AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an ASG behind ALB.
Parameters:
  VPCParameter:
    Description: Select VPC 
    Type: AWS::EC2::VPC::Id

  SubnetParameter:
    Description: Select at least 2 subnets
    Type: List<AWS::EC2::Subnet::Id>

  InstanceTypeParameter:
    Description: Select instance type
    Type: String
    Default: t2.micro
    AllowedValues:
         - t2.micro
         - t3.micro
         - t2.nano

  KeypairParameter:
    Description: Select your keypair
    Type: AWS::EC2::KeyPair::KeyName
  
Mappings: 
  RegionImageMap: 
    us-east-1: 
      AMI: ami-0ebfd941bbafe70c6
    us-east-2:
      AMI: ami-037774efca2da0726
    us-west-1:
      AMI: ami-047d7c33f6e7b4bc4
    us-west-2:
      AMI: ami-08d8ac128e0a1b91c
    eu-west-1:
      AMI: ami-0fed63ea358539e44
  
Resources:
  
  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows SSH and HTTP # Required
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !Ref VPCParameter

  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups: 
        - !GetAtt mySG.GroupId 
      Subnets: !Ref SubnetParameter
      Type: application

  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCParameter

  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref myTG
          Type: forward 
      LoadBalancerArn: !Ref myALB # Required
      Port: 80
      Protocol: HTTP

  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
           - RegionImageMap
           - !Ref 'AWS::Region'
           - AMI
        InstanceType: !Ref InstanceTypeParameter
        KeyName: !Ref KeypairParameter
        SecurityGroupIds:
          - !GetAtt mySG.GroupId
        UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch template by oktay</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 2
      HealthCheckGracePeriod: 100
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT
        Version: 1
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !Ref myTG
      VPCZoneIdentifier: !Ref SubnetParameter

  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:  
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60

Outputs:
  LoadBalancerDNSName:
    Description: The DNS Name of ALB
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt myALB.DNSName